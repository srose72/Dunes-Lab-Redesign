
DuneLabDatabase.sql/DuneLabUpdate.sql
Zane Toyon, Nicholas Heyer, Sophia Rose, Madison McCarty
MySQL Version 6.3.10

Run using the .tsv file generated by the DunesLabCompiler.py. You will need to change the file path in the first import statement to the correct one on your computer.

If a new species is added use the alter command on the file tables and the temp data to add the needed columns. To do this open the MySQL workbench, open a new query tab (Ctrl T) and enter the code as follows:
USE dune_lab;
ALTER TABLE frequency
ADD COLUMN [Genus_species] TINYINT;
ALTER TABLE obs
ADD COLUMN [Genus_species] TINYINT;
ALTER TABLE temp
ADD COLUMN [Genus_species] TINYINY;
Note: Any spaces or special characters (!@#$%^&*-?><, etc.) will have to be replaced with an underscore, or the code will not work.

The temp table should be structured metadata, data of counts, data of booleans seen. Additionally, the import commands (lines 422-825 in DuneLabDatabase) will need to have the new species added to the command. Refer to the comments within the sql script to properly add the species to the right place.

The first time you go to create the database, use DuneLabDatabase. Once the database has been created, use DuneLabUpdate.
